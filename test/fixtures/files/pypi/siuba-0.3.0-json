{"info":{"author":"Michael Chow","author_email":"mc_al_gh_siuba@fastmail.com","bugtrack_url":null,"classifiers":["Programming Language :: Python :: 3","Programming Language :: Python :: 3.10","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8","Programming Language :: Python :: 3.9"],"description":"siuba\n=====\n\n*scrappy data analysis, with seamless support for pandas and SQL*\n\n[![CI](https://github.com/machow/siuba/workflows/CI/badge.svg)](https://github.com/machow/siuba/actions?query=workflow%3ACI+branch%3Amaster)\n[![Documentation Status](https://readthedocs.org/projects/siuba/badge/?version=latest)](https://siuba.readthedocs.io/en/latest/?badge=latest)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/machow/siuba/master)\n\n<img width=\"30%\" align=\"right\" src=\"./docs/siuba_small.svg\">\n\nsiuba ([小巴](http://www.cantonese.sheik.co.uk/dictionary/words/9139/)) is a port of [dplyr](https://github.com/tidyverse/dplyr) and other R libraries. It supports a tabular data analysis workflow centered on 5 common actions:\n\n* `select()` - keep certain columns of data.\n* `filter()` - keep certain rows of data.\n* `mutate()` - create or modify an existing column of data.\n* `summarize()` - reduce one or more columns down to a single number.\n* `arrange()` - reorder the rows of data.\n\nThese actions can be preceeded by a `group_by()`, which causes them to be applied individually to grouped rows of data. Moreover, many SQL concepts, such as `distinct()`, `count()`, and joins are implemented.\nInputs to these functions can be a pandas `DataFrame` or SQL connection (currently postgres, redshift, or sqlite).\n\nFor more on the rationale behind tools like dplyr, see this [tidyverse paper](https://tidyverse.tidyverse.org/articles/paper.html). \nFor examples of siuba in action, see the [siuba documentation](https://siuba.readthedocs.io/en/latest/intro.html).\n\nInstallation\n------------\n\n```\npip install siuba\n```\n\nExamples\n--------\n\nSee the [siuba docs](https://siuba.readthedocs.io) or this [live analysis](https://www.youtube.com/watch?v=eKuboGOoP08) for a full introduction.\n\n### Basic use\n\nThe code below uses the example DataFrame `mtcars`, to get the average horsepower (hp) per cylinder.\n\n```python\nfrom siuba import group_by, summarize, _\nfrom siuba.data import mtcars\n\n(mtcars\n  >> group_by(_.cyl)\n  >> summarize(avg_hp = _.hp.mean())\n  )\n```\n\n```\nOut[1]: \n   cyl      avg_hp\n0    4   82.636364\n1    6  122.285714\n2    8  209.214286\n```\n\nThere are three key concepts in this example:\n\n| concept | example | meaning |\n| ------- | ------- | ------- |\n| verb    | `group_by(...)` | a function that operates on a table, like a DataFrame or SQL table |\n| siu expression | `_.hp.mean()` | an expression created with `siuba._`, that represents actions you want to perform |\n| pipe | `mtcars >> group_by(...)` | a syntax that allows you to chain verbs with the `>>` operator |\n\n\nSee [introduction to siuba](https://siuba.readthedocs.io/en/latest/intro.html#Introduction-to-siuba).\n\n### What is a siu expression (e.g. `_.cyl == 4`)?\n\nA siu expression is a way of specifying **what** action you want to perform.\nThis allows siuba verbs to decide **how** to execute the action, depending on whether your data is a local DataFrame or remote table.\n\n```python\nfrom siuba import _\n\n_.cyl == 4\n```\n\n```\nOut[2]:\n█─==\n├─█─.\n│ ├─_\n│ └─'cyl'\n└─4\n```\n\nYou can also think of siu expressions as a shorthand for a lambda function.\n\n```python\nfrom siuba import _\n\n# lambda approach\nmtcars[lambda _: _.cyl == 4]\n\n# siu expression approach\nmtcars[_.cyl == 4]\n```\n\n```\nOut[3]: \n     mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n2   22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n7   24.4    4  146.7   62  3.69  3.190  20.00   1   0     4     2\n..   ...  ...    ...  ...   ...    ...    ...  ..  ..   ...   ...\n27  30.4    4   95.1  113  3.77  1.513  16.90   1   1     5     2\n31  21.4    4  121.0  109  4.11  2.780  18.60   1   1     4     2\n\n[11 rows x 11 columns]\n```\n\nSee [siu expression section here](https://siuba.readthedocs.io/en/latest/intro.html#Concise-pandas-operations-with-siu-expressions-(_)).\n\n### Using with a SQL database\n\nA killer feature of siuba is that the same analysis code can be run on a local DataFrame, or a SQL source.\n\nIn the code below, we set up an example database.\n\n```python\n# Setup example data ----\nfrom sqlalchemy import create_engine\nfrom siuba.data import mtcars\n\n# copy pandas DataFrame to sqlite\nengine = create_engine(\"sqlite:///:memory:\")\nmtcars.to_sql(\"mtcars\", engine, if_exists = \"replace\")\n```\n\nNext, we use the code from the first example, except now executed a SQL table.\n\n```python\n# Demo SQL analysis with siuba ----\nfrom siuba import _, group_by, summarize, filter\nfrom siuba.sql import LazyTbl\n\n# connect with siuba\ntbl_mtcars = LazyTbl(engine, \"mtcars\")\n\n(tbl_mtcars\n  >> group_by(_.cyl)\n  >> summarize(avg_hp = _.hp.mean())\n  )\n```\n\n```\nOut[4]: \n# Source: lazy query\n# DB Conn: Engine(sqlite:///:memory:)\n# Preview:\n   cyl      avg_hp\n0    4   82.636364\n1    6  122.285714\n2    8  209.214286\n# .. may have more rows\n```\n\nSee [querying SQL introduction here](https://siuba.readthedocs.io/en/latest/intro_sql_basic.html).\n\n### Example notebooks\n\nBelow are some examples I've kept as I've worked on siuba.\nFor the most up to date explanations, see the [siuba docs](https://siuba.readthedocs.io)\n\n* [siu expressions](examples/examples-siu.ipynb)\n* [dplyr style pandas](examples/examples-dplyr-funcs.ipynb)\n  - [select verb case study](examples/case-iris-select.ipynb)\n* sql using dplyr style\n  - [simple sql statements](examples/examples-sql.ipynb)\n  - [the kitchen sink with postgres](examples/examples-postgres.ipynb)\n* [tidytuesday examples](https://github.com/machow/tidytuesday-py)\n  - tidytuesday is a weekly R data analysis project. In order to kick the tires\n    on siuba, I've been using it to complete the assignments. More specifically,\n    I've been porting Dave Robinson's [tidytuesday analyses](https://github.com/dgrtwo/data-screencasts)\n    to use siuba.\n\nTesting\n-------\n\nTests are done using pytest.\nThey can be run using the following.\n\n```bash\n# start postgres db\ndocker-compose up\npytest siuba\n```\n\n\n","description_content_type":"text/markdown","docs_url":null,"download_url":"","downloads":{"last_day":-1,"last_month":-1,"last_week":-1},"home_page":"https://github.com/machow/siuba","keywords":"package","license":"MIT","maintainer":"","maintainer_email":"","name":"siuba","package_url":"https://pypi.org/project/siuba/","platform":null,"project_url":"https://pypi.org/project/siuba/","project_urls":{"Homepage":"https://github.com/machow/siuba"},"release_url":"https://pypi.org/project/siuba/0.3.0/","requires_dist":["hypothesis ; extra == 'test'","pytest ; extra == 'test'","gapminder (==0.1) ; extra == 'docs'","jupytext ; extra == 'docs'","nbsphinx ; extra == 'docs'","sphinx ; extra == 'docs'","nbval ; extra == 'docs'","jupyter ; extra == 'docs'","plotnine ; extra == 'docs'","PyYAML (>=3.0.0)","SQLAlchemy (>=1.2.19)","numpy (>=1.12.0)","pandas (>=0.24.0)"],"requires_python":">=3.7","summary":"A package for quick, scrappy analyses with pandas and SQL","version":"0.3.0","yanked":false,"yanked_reason":null},"last_serial":15403708,"urls":[{"comment_text":"","digests":{"md5":"76256e930a05f9828ffc64b246be4ae4","sha256":"6c915be013a77a26ca3f4ffa803c120dfabb030c9d62425661bce1ea6bcfc82b"},"downloads":-1,"filename":"siuba-0.3.0-py3-none-any.whl","has_sig":false,"md5_digest":"76256e930a05f9828ffc64b246be4ae4","packagetype":"bdist_wheel","python_version":"py3","requires_python":">=3.7","size":142057,"upload_time":"2022-05-31T14:37:37","upload_time_iso_8601":"2022-05-31T14:37:37.201429Z","url":"https://files.pythonhosted.org/packages/bd/ce/91e0e7b4e215966ac8fed0f716b68fe669468203a10a826e7d0672cf34df/siuba-0.3.0-py3-none-any.whl","yanked":false,"yanked_reason":null},{"comment_text":"","digests":{"md5":"2280741c9118146fa8e7a51544e4f0d0","sha256":"308f0fe0239441025a1563f23ea7e1b8904cf3fce7a373c7918f4357a64e0c93"},"downloads":-1,"filename":"siuba-0.3.0.tar.gz","has_sig":false,"md5_digest":"2280741c9118146fa8e7a51544e4f0d0","packagetype":"sdist","python_version":"source","requires_python":">=3.7","size":116156,"upload_time":"2022-05-31T14:37:39","upload_time_iso_8601":"2022-05-31T14:37:39.791782Z","url":"https://files.pythonhosted.org/packages/cc/17/60cd2371a7fc111f6ac9ed6d4327df0af69096a6cb55b2d7ad62e8ea015f/siuba-0.3.0.tar.gz","yanked":false,"yanked_reason":null}],"vulnerabilities":[]}
